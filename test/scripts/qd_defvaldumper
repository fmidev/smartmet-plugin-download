#/bin/bash
#

if [ \( $# -eq 0 \) -o \( ! -s $1 \) ]; then
  echo $0: args: file expected
  exit 1
fi

# Scan for location file having matching name body exactly or up to ('_' separated) name part 'inherit';
# if such does not exist, the default locations will be used.
#
# If inherit is initialized to nonzero, any "parent" location file will do (the nearest one will be used).

if [ "$(echo $1 | grep "_inherit_")" != "" ]; then inherit=1; else inherit=0; fi

locfile=$(echo $1 | awk -F"/" '{ printf $NF }' | sed 's/\.get$//' | \
  awk -F"_" -v inherit=$inherit -v path=$(dirname $(readlink -f "$0")) \
  'BEGIN { tst=""; tstfile=""; locfile=""; baselocfile=""; }
  { for (i=1;i<=2&&i<=NF;i++) { baselocfile=(baselocfile)(i>1?"_":"")$i; }
    for (i=NF;i>=3;i--) {
      tst=(path)"/"(baselocfile);
      for (j=3;j<=i;j++) tst=(tst)"_"$j
      tstfile=(tst)"_testlocations.txt"
      if (system("[ -s " tstfile " ]")==0) { locfile=tstfile; break }
      if (inherit == 0) break;
    }
  }
  END { print (locfile!=""?locfile:(path)"/qd_def_testlocations.txt") }')

awk -F "\t" \
  -v defdumper=$(dirname $(readlink -f "$0"))/qd_defdumper \
  -v locfile=$locfile \
  -v qd=$1 \
  'BEGIN { locs="" } \
   function d(defdumper,qd,locfile,locs) { system (defdumper" "qd" qdpoint -c "locfile" -p "locs" -q") } \
   { locs=(locs)(locs!=""?",":"")$1; if ((NR % 10) == 0) { d(defdumper,qd,locfile,locs); locs="" } } \
   END { if (locs != "") d(defdumper,qd,locfile,locs); }' $locfile
